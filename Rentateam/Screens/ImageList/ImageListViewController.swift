//
//  ImageListViewController.swift
//  Rentateam
//
//  Created by Vitalii Sosin on 12.02.2021.
//  Copyright (c) 2021 SosinVitalii.com. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ImageListDisplayLogic: AnyObject {
    func fetchedArray(elements: [ImageListViewModel])
}

final class ImageListViewController: UIViewController {
    
    override func loadView() {
        view = ImageListTableView()
        imageListTableView.tableView.register(ImageListCellView.self, forCellReuseIdentifier: "cell")
    }
    
    private var imageListTableView: ImageListTableView {
        guard let view = view as? ImageListTableView else { fatalError("Could not create a view") }
        return view
    }
    
    private func setupDelegateAndDataSource() {
        imageListTableView.tableView.delegate = self
        imageListTableView.tableView.dataSource = self
    }
    
    private var allElements = [ImageListViewModel]()
    var interactor: ImageListInteractorLogic?
    var router: ImageListRouterLogic?
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupDelegateAndDataSource()
        interactor?.loadData()
        self.title = "Fotogram"
    }
}

extension ImageListViewController: UITableViewDelegate, UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        allElements.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = imageListTableView.tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath) as?
                ImageListCellView else { fatalError("Coult not create ImageListCellView") }
        cell.dateLabel.text = allElements[indexPath.row].date
        cell.imageLabel.image = allElements[indexPath.row].image
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        router?.navigateToShowImage(viewModel: allElements[indexPath.row])
    }
}

extension ImageListViewController: ImageListDisplayLogic {
    func fetchedArray(elements: [ImageListViewModel]) {
        allElements = elements
        imageListTableView.tableView.reloadData()
        imageListTableView.showTableView()
    }
}
